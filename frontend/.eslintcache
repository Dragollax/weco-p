[{"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\index.js":"1","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\app\\store.js":"3","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\App.js":"4","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\counter\\counterSlice.js":"5","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\ToBeChanged.js":"6","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\SignIn.js":"7","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\SignUp.js":"8","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\User.js":"9","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostForm.js":"10","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostList.js":"11","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostDetail.js":"12","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\LoginUser.js":"13","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\Home.js":"14","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\RegisterUser.js":"15","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UserInterestList.js":"16","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UserProfile.js":"17","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\Auth.js":"18","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UpdateProfile.js":"19","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\functions.js":"20"},{"size":641,"mtime":1616907091455,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1612408226931,"results":"23","hashOfConfig":"22"},{"size":197,"mtime":1616907162372,"results":"24","hashOfConfig":"22"},{"size":3194,"mtime":1626146688287,"results":"25","hashOfConfig":"22"},{"size":1551,"mtime":499162500000,"results":"26","hashOfConfig":"22"},{"size":1552,"mtime":1613256263509,"results":"27","hashOfConfig":"22"},{"size":3975,"mtime":1613256263508,"results":"28","hashOfConfig":"22"},{"size":4193,"mtime":1613256263509,"results":"29","hashOfConfig":"22"},{"size":1095,"mtime":1621740298639,"results":"30","hashOfConfig":"22"},{"size":3748,"mtime":1627188588552,"results":"31","hashOfConfig":"22"},{"size":3975,"mtime":1627106807077,"results":"32","hashOfConfig":"22"},{"size":2036,"mtime":1626146601238,"results":"33","hashOfConfig":"22"},{"size":2073,"mtime":1621745612784,"results":"34","hashOfConfig":"22"},{"size":1023,"mtime":1621740298572,"results":"35","hashOfConfig":"22"},{"size":2909,"mtime":1625811111239,"results":"36","hashOfConfig":"22"},{"size":1140,"mtime":1622416201527,"results":"37","hashOfConfig":"22"},{"size":3534,"mtime":1627185452378,"results":"38","hashOfConfig":"22"},{"size":1125,"mtime":1625612542245,"results":"39","hashOfConfig":"22"},{"size":3977,"mtime":1627185452362,"results":"40","hashOfConfig":"22"},{"size":1064,"mtime":1626632182046,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"nvqb5w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\index.js",[],["90","91"],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\app\\store.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\App.js",["92","93","94","95","96","97"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport ToBeChanged from \"./components/ToBeChanged\";\r\nimport User from \"./components/User\";\r\nimport React, { Component } from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\tuseParams,\r\n} from \"react-router-dom\";\r\nimport UserInterestList from './components/Accounts/UserInterestList'\r\nimport RegisterUser from \"./components/Accounts/RegisterUser\"\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport PostList from \"./components/PostList\";\r\nimport LoginUser from './components/Accounts/LoginUser';\r\nimport Home from './components/Accounts/Home';\r\nimport PostDetail from './components/PostDetail';\r\nimport PostForm from './components/PostForm';\r\nimport UserProfile from './components/Accounts/UserProfile';\r\nconst base_url = \"api.wecoapp.org/\"; //window.SERVER_ADDRESS\r\n\r\n//temporarily hard coding the url since window.SERVER_ADDRESS does not seem to be working (returns undefined)\r\n\r\nexport default function App() {\r\n\treturn <Router>\r\n\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t<nav\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpadding: \"10px\",\r\n\t\t\t\t\twidth: \"15%\",\r\n\t\t\t\t\tbackground: \"#444444\",\r\n\t\t\t\t\tcolor: '#FFF'\r\n\t\t\t\t}}>\r\n\t\t\t\t<ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n\t\t\t\t\t{/* should probably move the styling for links to css at some point, but oh well */}\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\" style={{ color: '#FFF' }}>base</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/SignIn\" style={{ color: '#FFF' }}>Sign In</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/SignUp\" style={{ color: '#FFF' }}>Sign Up</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/Home\" style={{ color: '#FFF' }}>Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/Recommended\" style={{ color: '#FFF' }}>For You</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/PostList\" style={{ color: '#FFF' }}>PostList</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/PostForm\" style={{ color: '#FFF' }}>Create Post</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/User\" style={{ color: '#FFF' }}>Users</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/userprofile\" style={{ color: '#FFF' }}>profile </Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/register\" style={{ color: '#FFF' }}> Register</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/interest\" style={{ color: '#FFF' }}> Interest user list</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t\t<Switch style={{ flex: 1, padding: \"10px\" }}>\r\n\t\t\t\t<Route path=\"/Signin\">\r\n\t\t\t\t\t<LoginUser />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/Signup\">\r\n\t\t\t\t\t<SignUp />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/Home\">\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t{/* <Route path=\"/Recommended\">\r\n\t\t\t\t\t<RecommendedPostList />\r\n\t\t\t\t</Route> */}\r\n\t\t\t\t<Route path=\"/PostList/:PostId\">\r\n\t\t\t\t\t<PostDetail />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/PostForm\">\r\n\t\t\t\t\t<PostForm />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/PostList\">\r\n\t\t\t\t\t<PostList />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/User\">\r\n\t\t\t\t\t<User />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/userprofile\">\r\n\t\t\t\t\t<UserProfile />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/register\">\r\n\t\t\t\t\t<RegisterUser />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route>\r\n\t\t\t\t\t<UserInterestList />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n}\r\n","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\counter\\counterSlice.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\ToBeChanged.js",["98"],"import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nexport default class ToBeChanged extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            loaded: false,\r\n            placeholder: \"Loading\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // fetch(\"api.wecoapp.org/posts/post-view-set/\")\r\n        //     .then(response => {\r\n        //         if (response.status > 400) {\r\n        //             return this.setState(() => {\r\n        //                 return { placeholder: \"Something went wrong!\" };\r\n        //             });\r\n        //         }\r\n        //         return response.json();\r\n        //     })\r\n        //     .then(data => {\r\n        //         console.log('data=', data);\r\n        //         this.setState(() => {\r\n        //             return {\r\n        //                 data,\r\n        //                 loaded: true\r\n        //             };\r\n        //     });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \r\n            <ul>\r\n                {/* {this.state.data.map(post => {\r\n                return (\r\n                    <li key={post.id}>\r\n                    {post.title} - {post.text} - {post.author}\r\n                    <img src={post.image}></img>\r\n                    </li>\r\n                );\r\n                })} */}\r\n                hello\r\n            </ul>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// const appDiv = document.getElementById(\"app\");\r\n// render(<App />, appDiv);","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\User.js",["99"],"import axios from 'axios';\r\nimport React, { useState, Component, useEffect } from \"react\";\r\nimport {\r\n    Link,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\";\r\nexport default function UserList() {\r\n  const [fetched, setFetched] = useState(false);\r\n  const [user, setUser] = useState([]);\r\n    let route = useRouteMatch();\r\n  useEffect(() => {\r\n    if(!fetched){\r\n    axios.get(\"api.wecoapp.org/accounts/profile/\")\r\n      .then(response => {\r\n        setFetched(true);\r\n        if (response.status > 400) {\r\n          return this.setState(() => {\r\n            return { placeholder: \"Something went wrong!\" }; \r\n          }\r\n          );\r\n        }\r\n        return response.data;\r\n      })\r\n      .then(data => {\r\n        setUser(data);\r\n      }); }\r\n    }\r\n  )\r\n  console.log(user)\r\n    return (\r\n      <ul>\r\n        {user.map(contact => {\r\n          return (\r\n            <li key={contact.username}>\r\n              <Link to={`${route}/${contact.id}`}>\r\n              {contact.username}\r\n               </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul> \r\n    );\r\n  }\r\n\r\n","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostForm.js",["100","101","102","103","104"],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostList.js",["105","106","107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Link,\r\n    useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'rgba(100, 100, 100, 1)',\r\n    },\r\n    gridList: {\r\n        width: 1920,\r\n        height: 1080,\r\n    },\r\n    gridListTile: {\r\n        marginBottom: theme.spacing(-100),\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    images: {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n    },\r\n}));\r\n\r\nconst customTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      boxShadow: theme.shadows[1],\r\n      fontSize: 11,\r\n    },\r\n  }))(Tooltip);\r\n\r\nconst base_url = \"api.wecoapp.org/\"; // temp, preferable to not be hardcoded\r\n\r\nexport default function PostList() {\r\n\r\n    const classes = useStyles();\r\n\r\n    let match = useRouteMatch();\r\n\r\n    const [fetched, setFetched] = useState(false); // so site doesnt constantly fetch data from backend\r\n    const [data, setData] = useState([]);\r\n    const [category, setCategory] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"handle change successful\");\r\n        setCategory(event.target.value);\r\n        setFetched(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let url = base_url + \"posts/post-view-set/\";\r\n\r\n        if (category) {\r\n            url = base_url + \"posts/post-view-set/\" + category + \"/cat_post_list/\";\r\n        }\r\n\r\n        if (!fetched) {\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.status > 400) {\r\n                        return this.setState(() => {\r\n                            return { placeholder: \"Something went wrong!\" };\r\n                        });\r\n                    }\r\n                    setFetched(true);\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    setData(data);\r\n                });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={300} cols={3} className={classes.gridList}>\r\n                {data.map(post => (\r\n                    <GridListTile key={post.id} cols={1} rows={1.18} className={classes.gridListTile}>\r\n                        <customTooltip title={post.text} placement=\"bottom-end\" interactive leaveDelay={500}>\r\n                            <Link to={`${match.url}/${post.id}`}>\r\n                                <img src={post.image} alt={post.title} className={classes.images} />\r\n\r\n                                <GridListTileBar\r\n                                    title={post.title}\r\n                                    subtitle={<span>Posted on {post.published_date} by: {post.author}</span>}\r\n                                // actionIcon={\r\n                                //     <IconButton aria-label={`${post.tags}`} className={classes.icon}>\r\n                                //         <InfoIcon />\r\n                                //     </IconButton>\r\n                                // }\r\n                                />\r\n                            </Link>\r\n                        </customTooltip>\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\PostDetail.js",["109"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst base_url = \"api.wecoapp.org/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'left',\r\n        backgroundColor: 'rgba(100, 100, 100, 1)',\r\n        color: 'rgba(255, 255, 255, 1)',\r\n        width: 1920,\r\n        height: 1080,\r\n    },    \r\n}));\r\n\r\nexport default function PostDetail() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { PostId } = useParams();\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    // const [tag, setTag] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let url = base_url + \"posts/post-view-set/\" + PostId;\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                if (response.status > 400) {\r\n                    return this.setState(() => {\r\n                        return { placeholder: \"Something went wrong!\" };\r\n                    });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(post => {\r\n                setPost(post);\r\n                // setTag(post.tags);\r\n            });\r\n    });\r\n\r\n    console.log(\"post: \" + post);\r\n    console.log(\"postId: \" + PostId);\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.paper}>\r\n\r\n                <Typography variant=\"h4\">\r\n                    {post.title}\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    {post.published_date}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Author: {post.author}\r\n                </Typography>\r\n                <img src={post.image} alt={post.title} />\r\n                <Typography>{post.text}</Typography>\r\n\r\n        </Grid>\r\n\r\n    );\r\n\r\n}","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\LoginUser.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\Home.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\RegisterUser.js",["110","111"],"import axios from 'axios';\r\nimport {register} from './Auth'\r\nimport React, { useState, useEffect } from \"react\";\r\nconst BASE_URL = 'api.wecoapp.org/accounts/';\r\nexport default function RegisterUser(){\r\n    const [fetched, setFetched] = useState(false);\r\n    const [interests, setInterests] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const [state, setState] = useState([{\r\n      username: \"\",\r\n      password :\"\",\r\n      email: \"\",\r\n      interests: []\r\n    }\r\n  ]\r\n  );\r\n\r\n  const handleSubmit = (e) =>{\r\n  e.preventDefault();\r\n  register( state.username,state.password, state.email, state.interests)\r\n  .then(response => window.location = '/')\r\n  .catch(err => alert(err));\r\n  } \r\n  useEffect(() => {\r\n  if(!fetched){\r\n  axios.get(BASE_URL + 'interest_list')\r\n  .then(response => {\r\n    setFetched(true);\r\n    if (response.status > 400) {\r\n      return this.setState(() => {\r\n        return { placeholder: \"Something went wrong!\" }; \r\n      }\r\n      );\r\n    }\r\n    return response.data;\r\n  })\r\n  .then(data => {\r\n    setFetched(true);\r\n    setState({interests:data})\r\n  })\r\n  .catch((err) => {\r\n    setError(err);\r\n  })\r\n  .finally(() => {\r\n    setLoading(false);\r\n  });\r\n\r\n\r\n  }})\r\n  if (loading) {\r\n    return <p>Data is loading...</p>;\r\n  }\r\n  if (error || !Array.isArray(state.interests)) {\r\n    return <p>There was an error loading your data!</p>;\r\n  }\r\n\r\n  //axios.get...\r\n  // get interest list, which is already created, and then send as a get request to onsubmit to create user\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value\r\n    });\r\n  }  \r\n  console.log(state)\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Username :\r\n        <input\r\n          name='username'\r\n          type=\"text\"\r\n        value={state.username}\r\n          onChange={e=> handleChange(e)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Email :\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          value={state.email}\r\n          onChange={handleChange}\r\n        /> \r\n      </label>\r\n      <label>\r\n        Password :\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={state.password}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Interests :\r\n        <select name=\"interest\" value={state.interests} onChange={handleChange}>\r\n            {state.interests.map((data) => (\r\n            <option \r\n            key={data.interests}\r\n            value={data.interests}> \r\n            {\r\n              data.interest_name\r\n            }\r\n\r\n            </option>\r\n            )\r\n            \r\n            )}\r\n            </select>\r\n      </label>\r\n      <button type=\"submit\" className=\"btn btn-default\">Submit</button>\r\n    </form>\r\n\r\n  );\r\n\r\n  }","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UserInterestList.js",["112","113","114"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n    useParams,\r\n  } from \"react-router-dom\";\r\n  axios.defaults.withCredentials = true;\r\nconst BASE_URL = 'api.wecoapp.org/';\r\nexport default function UserInterestList() {\r\n    const {UserID} = useParams();\r\n    const [user, setUser] = useState([]);\r\n    const [fetched, setFetched] = useState(false);\r\n    const config = {\r\n    withCredentials : true\r\n}\r\n    useEffect(()=> {\r\n if(!fetched){\r\n    axios.get('api.wecoapp.org/accounts/getuser/2/get_user',{withCredentials: true}) \r\n    .then(response => {\r\n      setFetched(true);\r\n      console.log(response.data);\r\n      return response.data;\r\n    \r\n    })\r\n    .then(response => {\r\n      setUser(response);\r\n      setFetched(true);\r\n      console.log(response);\r\n  })\r\n\r\n    .catch(err => console.log(err));\r\n}\r\n}\r\n    );\r\nreturn ( \r\n     <div>\r\n    \r\n    <ul>\r\n        {user.map(contact => {\r\n          return (\r\n            <li key={contact.username}>\r\n              {contact.username}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul> \r\n    </div> \r\n            \r\n);\r\n\r\n    }","C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UserProfile.js",["115","116","117","118","119","120"],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\Auth.js",[],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\UpdateProfile.js",["121"],"C:\\Users\\jovan\\Documents\\GitHub\\CoreDevelopment\\frontend\\src\\components\\Accounts\\functions.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":12},{"ruleId":"126","severity":1,"message":"130","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":19},{"ruleId":"126","severity":1,"message":"131","line":5,"column":17,"nodeType":"128","messageId":"129","endLine":5,"endColumn":26},{"ruleId":"126","severity":1,"message":"132","line":11,"column":2,"nodeType":"128","messageId":"129","endLine":11,"endColumn":11},{"ruleId":"126","severity":1,"message":"133","line":15,"column":8,"nodeType":"128","messageId":"129","endLine":15,"endColumn":14},{"ruleId":"126","severity":1,"message":"134","line":23,"column":7,"nodeType":"128","messageId":"129","endLine":23,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":36},{"ruleId":"126","severity":1,"message":"136","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":19},{"ruleId":"126","severity":1,"message":"137","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":14},{"ruleId":"126","severity":1,"message":"138","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":18},{"ruleId":"126","severity":1,"message":"139","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":106,"column":11,"nodeType":"142","endLine":106,"endColumn":25},{"ruleId":"126","severity":1,"message":"143","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":21},{"ruleId":"126","severity":1,"message":"144","line":12,"column":8,"nodeType":"128","messageId":"129","endLine":12,"endColumn":18},{"ruleId":"126","severity":1,"message":"145","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":16},{"ruleId":"126","severity":1,"message":"146","line":61,"column":11,"nodeType":"128","messageId":"129","endLine":61,"endColumn":23},{"ruleId":"126","severity":1,"message":"147","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":13},{"ruleId":"126","severity":1,"message":"148","line":7,"column":12,"nodeType":"128","messageId":"129","endLine":7,"endColumn":21},{"ruleId":"126","severity":1,"message":"149","line":7,"column":23,"nodeType":"128","messageId":"129","endLine":7,"endColumn":35},{"ruleId":"126","severity":1,"message":"150","line":7,"column":7,"nodeType":"128","messageId":"129","endLine":7,"endColumn":15},{"ruleId":"126","severity":1,"message":"151","line":9,"column":12,"nodeType":"128","messageId":"129","endLine":9,"endColumn":18},{"ruleId":"126","severity":1,"message":"152","line":12,"column":11,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"126","severity":1,"message":"153","line":3,"column":22,"nodeType":"128","messageId":"129","endLine":3,"endColumn":32},{"ruleId":"126","severity":1,"message":"154","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":19},{"ruleId":"126","severity":1,"message":"155","line":4,"column":21,"nodeType":"128","messageId":"129","endLine":4,"endColumn":30},{"ruleId":"126","severity":1,"message":"156","line":70,"column":18,"nodeType":"128","messageId":"129","endLine":70,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":108,"column":29,"nodeType":"142","endLine":108,"endColumn":62},{"ruleId":"140","severity":1,"message":"141","line":119,"column":17,"nodeType":"142","endLine":119,"endColumn":62},{"ruleId":"126","severity":1,"message":"132","line":5,"column":5,"nodeType":"128","messageId":"129","endLine":5,"endColumn":14},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ToBeChanged' is defined but never used.","'Component' is defined but never used.","'useParams' is defined but never used.","'SignIn' is defined but never used.","'base_url' is assigned a value but never used.","'render' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ListSubheader' is defined but never used.","'IconButton' is defined but never used.","'InfoIcon' is defined but never used.","'handleChange' is assigned a value but never used.","'Paper' is defined but never used.","'interests' is assigned a value but never used.","'setInterests' is assigned a value but never used.","'BASE_URL' is assigned a value but never used.","'UserID' is assigned a value but never used.","'config' is assigned a value but never used.","'withStyles' is defined but never used.","'ImageList' is defined but never used.","'withTheme' is defined but never used.","'setPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]